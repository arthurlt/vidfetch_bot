name: CI/CD Workflow

on:
  push:
    paths-ignore:
      - "**.md"
      - "docs/**"
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install build
          python3 -m pip install -e . --config-settings editable_mode=strict
      - name: Test
        run: |
          pip install pytest pytest-cov
          pytest --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Lint
        run: |
          pipx install ruff
          ruff check --output-format=github --target-version=py311
      - name: Build
        run: python3 -m build
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-test:
    # if: startsWith(github.ref, 'refs/tags/') # only publish on tag pushes
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/vidfetch_bot

    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  # publish:
  #   if: startsWith(github.ref, 'refs/tags/') # only publish on tag pushes
  #   needs:
  #     - build
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/vidfetch_bot

  #   permissions:
  #     id-token: write

  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package-distributions
  #         path: dist/
  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
